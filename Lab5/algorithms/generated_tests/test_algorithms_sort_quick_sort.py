# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.sort.quick_sort as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ",JX-=rw|l4M!"
    module_0.quick_sort(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = 2j
    module_0.quick_sort(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x9fO\xab\xf8m\xe8\x95\x19\x93x\xb3\xa5\xb0p\xef"
    module_0.quick_sort(bytes_0)


def test_case_3():
    int_0 = 3287
    var_0 = module_0.quick_sort_recur(int_0, int_0, int_0, int_0, int_0)
    bool_0 = False
    var_1 = module_0.quick_sort_recur(var_0, var_0, var_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    module_0.partition(bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ",JX-=rw|l4M!"
    module_0.quick_sort(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -3758
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.quick_sort(list_0, list_0)
    bool_0 = True
    module_0.quick_sort(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = -3758
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.quick_sort(list_0, list_0)
    var_1 = module_0.quick_sort(list_0)
    bool_0 = True
    int_1 = 1732
    none_type_0 = None
    module_0.quick_sort_recur(int_1, var_1, none_type_0, bool_0, int_1)
