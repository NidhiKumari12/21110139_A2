# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.sort.bogo_sort as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "\n    DFS function for Dinic algorithm.\n    Finds new flow using edges that is not full.\n    "
    module_0.bogo_sort(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"b\xd9\x96\x00\xa4\xed\xa5\x9a\xd7\xfe"
    module_0.bogo_sort(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.bogo_sort(none_type_0, none_type_0)


def test_case_3():
    set_0 = set()
    var_0 = module_0.bogo_sort(set_0, set_0)
    var_1 = module_0.bogo_sort(set_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "r6M?m}j[34xg\x0by\nw\rb"
    list_0 = [str_0, str_0]
    var_0 = module_0.bogo_sort(list_0)
    module_0.bogo_sort(str_0)


def test_case_5():
    str_0 = "="
    str_1 = "=yF^{KP>q!R)(N4<Cq\\"
    list_0 = [str_0, str_1, str_1, str_0]
    var_0 = module_0.bogo_sort(list_0, list_0)
    var_1 = module_0.bogo_sort(str_0)
    assert var_1 == "="


def test_case_6():
    str_0 = "z"
    str_1 = "=_F^yKP>q!R)7N4<Cq\\"
    list_0 = [str_0, str_1, str_1, str_0]
    none_type_0 = None
    var_0 = module_0.bogo_sort(list_0, none_type_0)
    var_1 = module_0.bogo_sort(str_0)
    assert var_1 == "z"
    var_2 = module_0.bogo_sort(var_0, list_0)
    var_3 = module_0.bogo_sort(str_0, var_0)
    object_0 = module_1.object()
